/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.openvpn.ovpn3;

public class DnsOptions_AddressList extends java.util.AbstractList<DnsAddress> implements java.util.RandomAccess {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DnsOptions_AddressList(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DnsOptions_AddressList obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(DnsOptions_AddressList obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ovpncliJNI.delete_DnsOptions_AddressList(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DnsOptions_AddressList(DnsAddress[] initialElements) {
    this();
    reserve(initialElements.length);

    for (DnsAddress element : initialElements) {
      add(element);
    }
  }

  public DnsOptions_AddressList(Iterable<DnsAddress> initialElements) {
    this();
    for (DnsAddress element : initialElements) {
      add(element);
    }
  }

  public DnsAddress get(int index) {
    return doGet(index);
  }

  public DnsAddress set(int index, DnsAddress e) {
    return doSet(index, e);
  }

  public boolean add(DnsAddress e) {
    modCount++;
    doAdd(e);
    return true;
  }

  public void add(int index, DnsAddress e) {
    modCount++;
    doAdd(index, e);
  }

  public DnsAddress remove(int index) {
    modCount++;
    return doRemove(index);
  }

  protected void removeRange(int fromIndex, int toIndex) {
    modCount++;
    doRemoveRange(fromIndex, toIndex);
  }

  public int size() {
    return doSize();
  }

  public int capacity() {
    return doCapacity();
  }

  public void reserve(int n) {
    doReserve(n);
  }

  public DnsOptions_AddressList() {
    this(ovpncliJNI.new_DnsOptions_AddressList__SWIG_0(), true);
  }

  public DnsOptions_AddressList(DnsOptions_AddressList other) {
    this(ovpncliJNI.new_DnsOptions_AddressList__SWIG_1(DnsOptions_AddressList.getCPtr(other), other), true);
  }

  public boolean isEmpty() {
    return ovpncliJNI.DnsOptions_AddressList_isEmpty(swigCPtr, this);
  }

  public void clear() {
    ovpncliJNI.DnsOptions_AddressList_clear(swigCPtr, this);
  }

  public DnsOptions_AddressList(int count, DnsAddress value) {
    this(ovpncliJNI.new_DnsOptions_AddressList__SWIG_2(count, DnsAddress.getCPtr(value), value), true);
  }

  private int doCapacity() {
    return ovpncliJNI.DnsOptions_AddressList_doCapacity(swigCPtr, this);
  }

  private void doReserve(int n) {
    ovpncliJNI.DnsOptions_AddressList_doReserve(swigCPtr, this, n);
  }

  private int doSize() {
    return ovpncliJNI.DnsOptions_AddressList_doSize(swigCPtr, this);
  }

  private void doAdd(DnsAddress x) {
    ovpncliJNI.DnsOptions_AddressList_doAdd__SWIG_0(swigCPtr, this, DnsAddress.getCPtr(x), x);
  }

  private void doAdd(int index, DnsAddress x) {
    ovpncliJNI.DnsOptions_AddressList_doAdd__SWIG_1(swigCPtr, this, index, DnsAddress.getCPtr(x), x);
  }

  private DnsAddress doRemove(int index) {
    return new DnsAddress(ovpncliJNI.DnsOptions_AddressList_doRemove(swigCPtr, this, index), true);
  }

  private DnsAddress doGet(int index) {
    return new DnsAddress(ovpncliJNI.DnsOptions_AddressList_doGet(swigCPtr, this, index), false);
  }

  private DnsAddress doSet(int index, DnsAddress val) {
    return new DnsAddress(ovpncliJNI.DnsOptions_AddressList_doSet(swigCPtr, this, index, DnsAddress.getCPtr(val), val), true);
  }

  private void doRemoveRange(int fromIndex, int toIndex) {
    ovpncliJNI.DnsOptions_AddressList_doRemoveRange(swigCPtr, this, fromIndex, toIndex);
  }

}
